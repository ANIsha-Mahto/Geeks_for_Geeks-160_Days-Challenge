#include<vector>
#include<string>

class Solution {
  public:
  
    std::vector<int>buildLPS(const std::string &pat){
        int m=pat.size();
        std::vector<int>lps(m,0);
        int len=0,i=1;
        
        while(i<m){
            if(pat[i]==pat[len]){
                len++;
                lps[i++]=len;
            }else{
                if(len!=0){
                    len=lps[len-1];
                }else{
                    lps[i++]=0;
                }
            }
        }
        return lps;
    }
  
  
 
    std::vector<int> search(std::string &pat,std::string &txt) {
        int m=pat.size(),n=txt.size();
        std::vector<int>lps=buildLPS(pat);
        std::vector<int>result;
        
        int i=0,j=0;
        while(i<n){
            if(txt[i]==pat[j]){
                i++; j++;
            }
            if(j==m){
                result.push_back(i-j);
                j=lps[j-1];
            }else if(i<n && txt[i]!=pat[j]){
                if(j!=0){
                    j=lps[j-1];
                }else{
                    i++;
                }
            }
        }
        return result;
        
    }
};
