class Solution {
  public:
    long subarrayXor(vector<int> &arr, int k) {
        int res=0;
        // for(int i=0;i<arr.size();i++){
        //     int prefXOR=0;
        //     for(int j=i;j<arr.size();j++){
        //         prefXOR=prefXOR^arr[j];
        //         if(prefXOR==k)
        //           res++;
        //     }
        // }
        // return res;
        
        std::unordered_map<int,int>freq;
        int prefXOR=0;
        long int count=0;
        for(int val:arr){
            prefXOR^=val;
            if(prefXOR==k)
              count++;
            if(freq.find(prefXOR^k)!=freq.end())
               count+=freq[prefXOR^k];
            freq[prefXOR]++;
        }
        return count;
    
    
     }
     
};
