/*
class Node {
  public:
    int data;
    Node* next;

    Node(int x){
        data = x;
        next = NULL;
    }
};
*/
class Solution {
  public:
    Node *reverseKGroup(Node *head, int k) {
        if(!head || k<=1)return head;
        Node* curr=head;
        int count=0;
        while(curr && count<k){
            curr=curr->next;
            count++;
        }
        if(count>0){
            Node* prev=nullptr;
            Node* next=nullptr;
            curr=head;
            int i=0;
            while(curr && i<count){
                next=curr->next;
                curr->next=prev;
                prev=curr;
                curr=next;
                i++;
            }
            head->next=reverseKGroup(curr,k);
            return prev;
            
        }
        return head;
        
    }
};
