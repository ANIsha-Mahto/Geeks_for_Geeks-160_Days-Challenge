/*
class Node {
  public:
    int data;
    Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};
*/

class Solution {
  private:
    Node* reverse(Node* head){
        Node* prev=NULL;
        while(head!=NULL){
            Node* next=head->next;
            head->next=prev;
            prev=head;
            head=next;
        }
        return prev;
    }
  public:
    Node* addTwoLists(Node* head1, Node* head2) {
        head1=reverse(head1);
        head2=reverse(head2);
        Node* dummy=new Node(-1);
        Node* temp=dummy;
        int carry=0;
        while(head1!=NULL || head2!=NULL || carry>0){
            int sum=carry;
            if(head1!=NULL){
                sum+=head1->data;
                head1=head1->next;
            }
            if(head2!=NULL){
                sum+=head2->data;
                head2=head2->next;
            }
            carry=sum/10;
            temp->next=new Node(sum%10);
            temp=temp->next;
        }
        Node* result=reverse(dummy->next);
        while(result && result->data==0 && result->next !=NULL){
            Node* toDelete=result;
            result=result->next;
            delete toDelete;
        }
        return result;
        
    }
};
