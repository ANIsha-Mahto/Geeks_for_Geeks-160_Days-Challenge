/*
class Node {
  public:
    int data;
    Node* next;
    Node* random;

    Node(int x) {
        data = x;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
  public:
    Node* cloneLinkedList(Node* head) {
        if(!head) return NULL;
        std::unordered_map<Node*,Node*>nodeMap;
        
        Node* curr=head;
        while(curr){
            // Node* copy=new Node(curr->data);
            // copy->next=curr->next;
            // curr->next=copy;
            // curr=copy->next;
            nodeMap[curr]=new Node(curr->data);
            curr=curr->next;
        }
        
        curr=head;
        while(curr){
            // if(curr->random)
            //   curr->next->random=curr->random->next;
            // curr=curr->next->next;
            nodeMap[curr]->next=nodeMap[curr->next];
            nodeMap[curr]->random=nodeMap[curr->random];
            curr=curr->next;
        }
        
        // Node* dummy=new Node(0);
        // Node* copyCurr=dummy;
        // curr=head;
        // while(curr){
        //     Node* front=curr->next->next;
        //     copyCurr->next=curr->next;
        //     copyCurr=copyCurr->next;
        //     curr=front;
        // }
        return nodeMap[head];
        
    }
};
